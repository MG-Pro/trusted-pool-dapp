/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  PooledTemplate,
  PooledTemplateInterface,
} from "../../contracts/PooledTemplate";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_tokenName",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "share",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "accrued",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct PooledTemplate.Participant[]",
        name: "_participants",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "claimTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "first",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
    ],
    name: "getPoolData",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "enum PooledTemplate.Statuses",
        name: "status",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "share",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "accrued",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct PooledTemplate.Participant[]",
        name: "participants",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "setTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type PooledTemplateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PooledTemplateConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PooledTemplate__factory extends ContractFactory {
  constructor(...args: PooledTemplateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _creator: PromiseOrValue<string>,
    _name: PromiseOrValue<string>,
    _tokenAddress: PromiseOrValue<string>,
    _tokenName: PromiseOrValue<string>,
    _participants: PooledTemplate.ParticipantStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PooledTemplate> {
    return super.deploy(
      _creator,
      _name,
      _tokenAddress,
      _tokenName,
      _participants,
      overrides || {}
    ) as Promise<PooledTemplate>;
  }
  override getDeployTransaction(
    _creator: PromiseOrValue<string>,
    _name: PromiseOrValue<string>,
    _tokenAddress: PromiseOrValue<string>,
    _tokenName: PromiseOrValue<string>,
    _participants: PooledTemplate.ParticipantStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _creator,
      _name,
      _tokenAddress,
      _tokenName,
      _participants,
      overrides || {}
    );
  }
  override attach(address: string): PooledTemplate {
    return super.attach(address) as PooledTemplate;
  }
  override connect(signer: Signer): PooledTemplate__factory {
    return super.connect(signer) as PooledTemplate__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PooledTemplateInterface {
    return new utils.Interface(_abi) as PooledTemplateInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PooledTemplate {
    return new Contract(address, _abi, signerOrProvider) as PooledTemplate;
  }
}
