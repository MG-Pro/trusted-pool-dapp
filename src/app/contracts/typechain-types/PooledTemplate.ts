/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "./common";

export declare namespace PooledTemplate {
  export type ParticipantStruct = {
    account: PromiseOrValue<string>;
    share: PromiseOrValue<BigNumberish>;
    claimed: PromiseOrValue<BigNumberish>;
    description: PromiseOrValue<string>;
  };

  export type ParticipantStructOutput = [
    string,
    BigNumber,
    BigNumber,
    string
  ] & {
    account: string;
    share: BigNumber;
    claimed: BigNumber;
    description: string;
  };
}

export interface PooledTemplateInterface extends utils.Interface {
  functions: {
    "creator()": FunctionFragment;
    "getData()": FunctionFragment;
    "status()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic: "creator" | "getData" | "status"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "creator", values?: undefined): string;
  encodeFunctionData(functionFragment: "getData", values?: undefined): string;
  encodeFunctionData(functionFragment: "status", values?: undefined): string;

  decodeFunctionResult(functionFragment: "creator", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getData", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "status", data: BytesLike): Result;

  events: {};
}

export interface PooledTemplate extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: PooledTemplateInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    creator(overrides?: CallOverrides): Promise<[string]>;

    getData(
      overrides?: CallOverrides
    ): Promise<
      [
        string,
        string,
        string,
        string,
        number,
        PooledTemplate.ParticipantStructOutput[]
      ] & {
        _creator: string;
        _name: string;
        _tokenAddress: string;
        _tokenName: string;
        _status: number;
        _participants: PooledTemplate.ParticipantStructOutput[];
      }
    >;

    status(overrides?: CallOverrides): Promise<[number]>;
  };

  creator(overrides?: CallOverrides): Promise<string>;

  getData(
    overrides?: CallOverrides
  ): Promise<
    [
      string,
      string,
      string,
      string,
      number,
      PooledTemplate.ParticipantStructOutput[]
    ] & {
      _creator: string;
      _name: string;
      _tokenAddress: string;
      _tokenName: string;
      _status: number;
      _participants: PooledTemplate.ParticipantStructOutput[];
    }
  >;

  status(overrides?: CallOverrides): Promise<number>;

  callStatic: {
    creator(overrides?: CallOverrides): Promise<string>;

    getData(
      overrides?: CallOverrides
    ): Promise<
      [
        string,
        string,
        string,
        string,
        number,
        PooledTemplate.ParticipantStructOutput[]
      ] & {
        _creator: string;
        _name: string;
        _tokenAddress: string;
        _tokenName: string;
        _status: number;
        _participants: PooledTemplate.ParticipantStructOutput[];
      }
    >;

    status(overrides?: CallOverrides): Promise<number>;
  };

  filters: {};

  estimateGas: {
    creator(overrides?: CallOverrides): Promise<BigNumber>;

    getData(overrides?: CallOverrides): Promise<BigNumber>;

    status(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    creator(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getData(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    status(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
